version: '3'

services:
  mongoDB:
    image: 'mongo'
    volumes:
      - data:/data/db
    env_file:
      - ./env/mongo.env
  redisDB:
    image: 'redis'
  authserver:
    build: ./authserver
    volumes:
      - authLogs:/app/logs
      - ./authserver:/app
      - /app/node_modules
    env_file:
      - ./env/authserver.env
    depends_on:
      - mongoDB
      - redisDB
  # apiserver:
  #  build: ./api
  #  volumes:
  #    - apiLogs:/app/logs
  #    - ./api:/app
  #    - /app/node_modules
  #  env_file:
  #    - ./env/apiserver.env
  #  depends_on:
  #    - authserver
  reactserver:
    build: ./reactserver
    volumes:
      - web-root:/usr/share/nginx/html
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - web-root:/usr/share/nginx/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrpyt
    depends_on:
      - authserver
      - reactserver
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/usr/share/nginx/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email josh@cursedtale.com --agree-tos --no-eff-email --force-ren>

volumes:
  certbot-etc:
  certbot-var:
  data:
  #  apiLogs:
  authLogs:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /usr/wsw/reactserver/nginx
      o: bind
