version: '3'

services:
  mongoDB:
    image: 'mongo'
    volumes:
      - data:/data/db
    env_file:
      - ./env/mongo.env
  redisDB:
    image: 'redis'
  authserver:
    build: ./authserver
    volumes:
      - authLogs:/app/logs
      - ./authserver:/app
      - /app/node_modules
    env_file:
      - ./env/authserver.env
    depends_on:
      - mongoDB
      - redisDB
  # apiserver:
  #  build: ./api
  #  volumes:
  #    - apiLogs:/app/logs
  #    - ./api:/app
  #    - /app/node_modules
  #  env_file:
  #    - ./env/apiserver.env
  #  depends_on:
  #    - authserver
  nginx:
    image: nginx:1.15-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/data/nginx:/etc/nginx/conf.d
      - ./nginx/data/certbot/conf:/etc/letsencrypt
      - ./nginx/data/certbot/www:/var/www/certbot
    restart: unless-stopped
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - authserver
  reactserver:
    build: ./reactserver
    depends_on:
      - nginx
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/data/certbot/conf:/etc/letsencrypt
      - ./nginx/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  data:
  #  apiLogs:
  authLogs:
